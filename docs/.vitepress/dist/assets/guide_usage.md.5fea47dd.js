import{_ as e,c as n,b as s,d as t,t as l,a as o,o as r}from"./app.47236b7f.js";const b=JSON.parse('{"title":"DBConvert-stream - Usage","description":"Counter","frontmatter":{"title":"DBConvert-stream - Usage","description":"Counter","layout":"doc","lastUpdated":true},"headers":[{"level":2,"title":"Real-time data integration platform","slug":"real-time-data-integration-platform","link":"#real-time-data-integration-platform","children":[{"level":3,"title":"Response","slug":"response","link":"#response","children":[]}]},{"level":2,"title":"Stop stream","slug":"stop-stream","link":"#stop-stream","children":[]},{"level":2,"title":"Stop stream server","slug":"stop-stream-server","link":"#stop-stream-server","children":[]},{"level":2,"title":"Status","slug":"status","link":"#status","children":[{"level":3,"title":"Docker containers","slug":"docker-containers","link":"#docker-containers","children":[]}]},{"level":2,"title":"Build & Run","slug":"build-run","link":"#build-run","children":[{"level":3,"title":"JSONiter","slug":"jsoniter","link":"#jsoniter","children":[]}]},{"level":2,"title":"Marshal ~ the same as standard encoding/jsonUnmarshal is faster than standard encoding/json","slug":"marshal-the-same-as-standard-encoding-jsonunmarshal-is-faster-than-standard-encoding-json","link":"#marshal-the-same-as-standard-encoding-jsonunmarshal-is-faster-than-standard-encoding-json","children":[]},{"level":2,"title":"TRASH","slug":"trash","link":"#trash","children":[]}],"relativePath":"guide/usage.md","lastUpdated":1663172001000}'),p={name:"guide/usage.md"},i={id:"frontmatter-title",tabindex:"-1"},c=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=o(`<h2 id="real-time-data-integration-platform" tabindex="-1">Real-time data integration platform <a class="header-anchor" href="#real-time-data-integration-platform" aria-hidden="true">#</a></h2><h3 id="response" tabindex="-1">Response <a class="header-anchor" href="#response" aria-hidden="true">#</a></h3><div class="language-JSON"><button class="copy"></button><span class="lang">JSON</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">stream</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#A6ACCD;">	   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">22IieXEiAzXYsS7RmrY3171ghiR</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">startTime</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2021-12-15T02:26:37+01:00</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	   </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">INIT</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="stop-stream" tabindex="-1">Stop stream <a class="header-anchor" href="#stop-stream" aria-hidden="true">#</a></h2><div class="language-sh"><button class="copy"></button><span class="lang">sh</span><pre><code><span class="line"><span style="color:#A6ACCD;">curl --request GET --url http://127.0.0.1:8020/stop</span></span>
<span class="line"></span></code></pre></div><h2 id="stop-stream-server" tabindex="-1">Stop stream server <a class="header-anchor" href="#stop-stream-server" aria-hidden="true">#</a></h2><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">curl --request GET --url http://127.0.0.1:8020/shutdown</span></span>
<span class="line"></span></code></pre></div><p>There are 3 ways to stop a stream:</p><ol><li>By default, it will work endlessly until it is stopped by calling the endpoint <code>/stop</code></li><li>Set limits in the payload to stop a stream when 2.1 the number of transferred records has been reached or 2.2 the specified time has expired.</li></ol><h2 id="status" tabindex="-1">Status <a class="header-anchor" href="#status" aria-hidden="true">#</a></h2><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">curl --request GET --url http://127.0.0.1:8020/stat </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> jq</span></span>
<span class="line"></span></code></pre></div><h3 id="docker-containers" tabindex="-1">Docker containers <a class="header-anchor" href="#docker-containers" aria-hidden="true">#</a></h3><h2 id="build-run" tabindex="-1">Build &amp; Run <a class="header-anchor" href="#build-run" aria-hidden="true">#</a></h2><div class="language-bash"><button class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#A6ACCD;">go build -o dg ./datagen/mysql/wg/</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">GOOS=windows GOARCH=amd64 go build -o test.exe </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">dg -chunk 1000 -workers 1000 -password dmsoft</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">go build -o dst ./cmd/destination/mysql/destination.go</span></span>
<span class="line"><span style="color:#A6ACCD;">go build -o src ./cmd/source/mysql/source.go</span></span>
<span class="line"></span></code></pre></div><h3 id="jsoniter" tabindex="-1">JSONiter <a class="header-anchor" href="#jsoniter" aria-hidden="true">#</a></h3><h2 id="marshal-the-same-as-standard-encoding-jsonunmarshal-is-faster-than-standard-encoding-json" tabindex="-1">Marshal ~ the same as standard encoding/json Unmarshal is faster than standard encoding/json <a class="header-anchor" href="#marshal-the-same-as-standard-encoding-jsonunmarshal-is-faster-than-standard-encoding-json" aria-hidden="true">#</a></h2><p>Update: Go 1.14 json beats json-iterator in performance <a href="https://github.com/json-iterator/go/issues/455" target="_blank" rel="noreferrer">https://github.com/json-iterator/go/issues/455</a> -&gt; Moving to encoding/json</p><h2 id="trash" tabindex="-1">TRASH <a class="header-anchor" href="#trash" aria-hidden="true">#</a></h2><p>ignoreDeletes, ignoreUpdates bool ???</p>`,19);function h(a,u,D,g,m,y){return r(),n("div",null,[s("h1",i,[t(l(a.$frontmatter.title)+" ",1),c]),d])}const C=e(p,[["render",h]]);export{b as __pageData,C as default};
